apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'

group = 'com.hubble.actors'
version = '1.0.0'
setupPublishingDetails()

jar {
	manifest {
		attributes 'Implementation-Title': 'KotlinActors',
				'Implementation-Version': version
	}
}

configurations {
	deployJars
}

repositories {
	maven {
		credentials {
			username artifactory_user
			password artifactory_password
		}
		url "${artifactory_contextUrl}/${project.ext.publishingRepo}"
	}
	jcenter()
	mavenCentral()
}

buildscript {
	ext.kotlin_version = '1.0.0-beta-1038'
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}


dependencies {
	compile 'com.google.guava:guava:18.0'
	testCompile 'junit:junit:4.12'
	deployJars group: 'org.apache.maven.wagon', name: 'wagon-http', version: '2.6'
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	compile "com.google.android:android:4.1.1.4"
}

test {
	testLogging {
		events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
	}
}

uploadArchives {
	repositories.mavenDeployer {
		configuration = configurations.deployJars
		repository(url: "${artifactory_contextUrl}/${project.ext.publishingRepo}") {
			authentication(userName: "${artifactory_user}", password: "${artifactory_password}")
		}
	}
}
sourceSets {
	main.java.srcDirs += 'src/main/kotlin'
}

def setupPublishingDetails() {
	def env = System.getenv('CI_ENV')
	if (env == 'RELEASE') {
		project.ext.publishingRepo = 'libs-release-local'
		return
	}
	project.ext.publishingRepo = 'libs-snapshot-local'
	version = "${version}-SNAPSHOT"
}
